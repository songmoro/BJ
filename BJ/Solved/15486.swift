//
//  15486.swift
//  BJ
//
//  Created by 송재훈 on 2/10/25.
//


//7
//3 10
//5 20
//1 10
//1 20
//2 15
//4 40
//2 200

let N = Int(readLine()!)!

let TP: [(Int, Int)] = (0..<N).map { i in
    let tp = readLine()!.split(separator: " ").map({ Int($0)! })
    return (i + tp[0]) > N ? (0, 0) : (tp[0], tp[1])
}

var dp: [Int] = .init(repeating: 0, count: N + 1)

for i in 0..<N {
    let (t, p) = TP[i]
    dp[i + 1] = max(dp[i + 1], dp[i])
    dp[i + t] = max(dp[i + t], dp[i] + p)
}

print(dp)

//dp[i + 1] = max(dp[i + 1], dp[i]) -> 오늘 상담을 안 할 거면 내일은 오늘과 내일 중 최대 값
//dp[i + t] = max(dp[i + t], dp[i] + p) -> 만약 오늘 상담을 하면 상담이 끝난 날(i + t)에 해당 일과 오늘의 상담 보수 비교
//
//7
//3 10
//5 20
//1 10
//1 20
//2 15
//4 40
//2 200
//
//          1   2   3   4   5   6   7
//(0,  0)   0   0   0   0   0   0   0
//(3, 10)  10  10  10  10  10  10  10
//(5, 20)  10  20  20  20  20  20  20
//(1, 10)  10   0  10  10  10  10  10
//(1, 20)  10   0   0  20  20  20  20
//(2, 15)  10   0   0   0  15  15  15
//(4, 40)  10   0   0   0   0   0   0
//(2, 200) 10   0   0   0   0   0   0
